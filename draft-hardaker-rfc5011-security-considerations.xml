<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" "reference.RFC.2119.xml">
<!ENTITY rfc5011 PUBLIC "" "reference.RFC.5011.xml">
]>
<!-- WK: Set category, IPR, docName -->
<rfc category="std" docName="draft-hardaker-rfc5011-security-considerations-00"
     ipr="trust200902">
	<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

	<?rfc toc="yes" ?>

	<?rfc symrefs="yes" ?>

	<?rfc sortrefs="yes"?>

	<?rfc iprnotified="no" ?>

	<?rfc strict="yes"?>

	<?rfc compact="yes" ?>

	<front>
		<!-- WK: Set long title. -->

		<title abbrev="RFC5011 Security Considerations ">Security
		Considerations for RFC5011 Publishers</title>

		<author fullname="Wes Hardaker" initials="W." surname="Hardaker">
			<organization>Parsons, Inc.</organization>

			<address>
				<postal>
					<street>P.O. Box 382</street>

					<city>Davis, CA</city>

					<code>95617</code>

					<country>US</country>
				</postal>

				<email>ietf@hardakers.net</email>
			</address>
		</author>

		<author fullname="Warren Kumari" initials="W." surname="Kumari">
			<organization>Google</organization>

			<address>
				<postal>
					<street>1600 Amphitheatre Parkway</street>

					<city>Mountain View, CA</city>

					<code>94043</code>

					<country>US</country>
				</postal>

				<email>warren@kumari.net</email>
			</address>
		</author>

		<date day="25" month="July" year="2016"/>

		<area>template</area>

		<workgroup>dnsop</workgroup>

		<abstract>
			<t>This document describes the minimum requirements which a
			publisher of a zone must wait before using a new DNSKEY
			advertised using the RFC5011 DNSKEY rollover process.</t>
		</abstract>
	</front>

	<middle>
		<section title="Introduction">
			<t>RFC5011 <xref target="RFC5011" /> defines a mechanism by which
			DNSSEC validators can extend their list of trust anchors when
			they've seen a new key.  However, RFC5011 [intentionally]
			provides no guidance to publishers of DNSKEYs about how long
			they must wait before such a new key is actually usable.
			Because of this lack of guidance, DNSSEC publishers may derive
			incorrect assumptions about safe usage of the RFC5011 process.
			This document describes the minimum security requirements from a
			publishers point of view and is intended to compliment the
			guidance offered in RFC5011 (which is designed to solely
			represent the Validating Resolvers point of view).</t>

			<t>The authors reached out to 5 DNSSEC experts
			and asked them how long they must wait before
			using a new KSK that was being rolled
			according to the 5011 process.  All 5 experts
			answered with an insecure value, and thus the
			authors have determined that this lack of
			operational guidance is causing security
			concerns.  This document will hopefully help
			rectify this problem.</t>

			<t>One important (temporary?) note about
			ICANN's upcoming KSK rolling plan for the root
			zone: the timing values, at the time of this
			writing, chosen for rolling the KSK in the
			root zone appear completely safe, and are not in
			any way affected by the timing concerns
			introduced by this draft</t>

			<t/>

			<section title="Requirements notation">
				<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
				"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
				document are to be interpreted as described in <xref
				target="RFC2119"/>.</t>
			</section>
		</section>

		<section title="Background">
			<t>The RFC5011 process describes a process by which a
			Validating Resolver may accept a newly published KSK as a trust
			anchor for validating future DNSSEC signed records.  This
			document augments that information with additional constraints,
			as required from the DNSKEY publication point of view.  Note
			that it does not define any other operational guidance or
			recommendations about the RFC5011 process from a publication
			point of view and restricts itself to solely
			the security and operational
			ramifications of switching to a new key too soon.  Failure of a
			DNSKEY publisher to follow the minimum recommendations
			associated with this draft will result in potential
			denial-of-service attack opportunities against validating
			resolvers.</t>
		</section>

		<section title="Terminology">
			<t><list style="hanging">
				<t hangText="foo"> bar</t>
			</list></t>
		</section>

		<section title="Timing associated with RFC5011 processing">
			<t>TBD</t>
		</section>

		<section title="Denial of Service Attack
		                Considerations" anchor="attack">
			<t>If an attacker is able to provide a RFC5011 validating engine
			with past responses, such as when it is in-path or able to
			otherwise perform any number of cache poising
			attacks, she may be able to leave the
			RFC5011-compliant validator without an
			appropriate DNSKEY trust anchor.</t>
			<t> The following timeline illustrates this situation.</t>

			<section title="Numerical Concrete Attack
			                Example" anchor="examplenumbers">
				<t>These assumptions are used in the example scenario within
				this section. 

				<list style="hanging">
					<t hangText="TTL (all records)">1 day</t>
					<t hangText="DNSKEY RRSIG Signature Validity">10 days</t>
					<t hangText="Zone resigned every">1 day</t>
				</list>
				</t>

				<t>Given these assumptions, the following sequence
				of events depicts how a Trust Anchor Publisher (XXX:
				TERM!) which waits for only the RFC5011 hold time timer
				length of 30 days subjects its users to a potential
				Denial of Service attack.  The timing schedule listed
				below is based on a new Key Signing Key (KSK) being
				published at T+0, and where all numbers in this sequence
				refer to days before and after such an event.  Thus, T-1
				is the day before the introduction of the new key, and
				T+15 is the 15th day after the key was introduced into
				the zone being discussed..</t>

				<t>In this dialog, we consider two keys being published:
				<list style="hanging">
					<t hangText="Kold">The older KSK being replaced.</t>
					<t hangText="Knew">The new KSK being
					transitioned into active use, using the
					RFC5011 process.</t>
				</list> </t>

				<t>In this dialog, the following actors are
				discussed:
				<list style="hanging">
					<t hangText="Zone Signer">The owner of a
					zone intending to publish a new Key-Signing-Keys
					(KSKs) that will become a
					trust anchor by
					validators following the RFC5011 process.</t>

					<t hangText="RFC5011 Validator">A DNSSEC
					validator that is using the RFC5011 processes to
					track and update trust
					anchors.</t>

					<t hangText="Attacker">An attacker intent on
					foiling the RFC5011 Validator's ability to
					successfully adopt the Zone Signer's Knew
					key as a trust anchor.</t>
				</list>
				</t>
				

				<section title="Attack Timing Breakdown">

					<t>The following series of steps depicts the timeline in
					which an attack occurs that foils the publisher of a new
					key who revokes the old key too quickly.
					
					<list style="hanging">
						<t hangText="T-1">The last signatures
						are published by the Zone Signer
						that signs only Kold using Kold.</t>

						<t hangText="T-0">The Zone Signer
						adds Knew to his zone and signs the
						zone's key set with Kold.  The RFC5011
						Validator retrieves the new key set and
						corresponding signature set and notices
						the publication of Knew.  The RFC5011
						Validator starts the hold-down timer for
						Knew.</t>

						<t hangText="T+5">The RFC5011 Validator
						queries for the zone's keyset per the
						Active Refresh schedule, discussed in
						Section 2.3 of RFC5011.  Instead of
						receiving the intended published keyset,
						the Attacker successfully replays the
						keyset and associated signatures that
						they recorded at T-1.  Because the
						signature lifetime is 10 days (in this
						example), the replayed signature and
						keyset is accepted as valid (being only
						6 days old) and the RFC5011 Validator
						cancels the hold-down timer for
						Knew.</t>

						<t hangText="T+10">The RFC5011 Validator
						queries for the zone's keyset and
						discovers Knew again,
						signed by Kold (the
						attacker is unable to
						replay the records
						at T-1, because they
						have now expired).
						It starts the hold-timer for Knew
						again.</t>

						<t hangText="...">The RFC5011 Validator
						continues checking the zone's key set
						and lets the hold-down timer keep
						running without resetting it.</t>

						<t hangText="T+30">The Zone Signer
						believes that this is the first time at
						which some validators might accept Knew
						as a new trust anchor.  The hold-down
						timer of our RFC5011
						Validator is at 20 days.</t>

						<t hangText="T+35">The Zone Signer
						mistakenly believes that all validators
						following the Active Refresh schedule
						should have accepted
						Knew as a the new trust
						anchor (since 30 days
						+ 1/2 the signature
						validity period would
						have passed).  The hold-time timer of our
						RFC5011 Validator is at 25 days and has
						not actually reached its 30 day
						requirement though.</t>

						<t hangText="T+36">The Zone Signer,
						believing Knew is safe to use, switches
						their active KSK to Knew and publishes a
						new key set signature using Knew as the
						signing key.  Because our RFC5011
						Validator still has a hold-down timer
						for Knew at 26 days, it will fail to
						validate this new key set and the zone
						contents will be treated as invalid.</t>
					</list>
					</t>
				</section>
			</section>
		</section>

		<section title="Proper Timing Requirements">
			<t>Given the attack description in <xref
			target="attack" />, the correct length of time
			required for the Zone Signer to wait before
			using Knew is:

                        <figure>
                                <artwork>
  waitTime = addHoldDownTime
             + 3 * (DNSKEY RRSIG Signature Validity) / 2
             + 2 * (TTL (all records))
                                </artwork>
                        </figure>
                        </t>
                        
                        <t>For the parameters listed in <xref
                        target="examplenumbers" />, this becomes:

                        <figure>
                                <artwork>
  waitTime = 30 + 3 * (10) / 2 + 2 * (1)  (days)
  waitTime = 46                           (days)
                                </artwork>
                        </figure>
                        </t>
		</section>			
				
		<section title="IANA Considerations">
			<t>This document contains no IANA considerations.</t>
		</section>
		
		<section anchor="operational" title="Operational
		                                  Considerations">
			<t>A companion document to RFC5011 was
			expected to be published that describes the
			best operational considerations from the
			perspective of a zone publisher.  However, the
			companion document was never written but the
			authors of this document hope that it will at
			some point in the future.  This document is
			intended only to fill a single operational
			void that results in security ramifications
			(specifically a denial of service attack
			against an RFC5011 Validator).  This document
			does not attempt to document any other missing
			operational guidance for zone publishers.</t>
		</section>
		<section anchor="security" title="Security Considerations">
			<t>This document, is solely about the security
			considerations with respect to the publisher of RFC5011 trust
			anchors / keys.</t>
		</section>
	</middle>

	<back>
		<references title="Normative References">
			&rfc2119;
			&rfc5011;
		</references>

		<!--
		    <references title="Informative References">
		    </references>
		-->

		<section title="Changes / Author Notes.">
			<t>None yet</t>
		</section>
	</back>
</rfc>
